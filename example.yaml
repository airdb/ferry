log:
  level: info
  backups: 2
  maxsize: 1073741824
  localtime: true
global:
  max_idle_conns: 100
  dial_timeout: 30
  dns_ttl: 1800
  prefer_ipv6: false
  dns_server: https://223.5.5.5/dns-query
upstream:
  torsocks:
    scheme: socks5h
    host: 127.0.0.1
    port: 9050
  proxy1_example_org:
    scheme: https
    username: user
    password: password
    host: proxy1.example.org
    port: 443
  proxy2_example_com:
    scheme: https
    username: foobar
    password: 123456
    host: proxy2.example.com
    port: 443
https:
  - listen: [':443']
    index:
      root: /var/www/html
  - listen: [':443']
    server_name: ['example.org']
    keyfile: example_org.pem
    index:
      root: /var/www/example.org
      body: |
        <html>
        <head><title>Index of {{.Request.URL.Path}}</title></head>
        <body>
        <h1>Index of {{.Request.URL.Path}}</h1><hr><pre><a href="../">../</a>
        {{range .FileInfos -}}
        {{if .IsDir -}}
        <a href="{{.Name}}/">{{.Name}}/</a>          {{.ModTime.Format "02-Jan-2006 15:04"}}       -
        {{else -}}
        <a href="{{.Name}}">{{.Name}}</a>          {{.ModTime.Format "02-Jan-2006 15:04"}}    {{.Size}}
        {{end -}}
        {{end}}</pre><hr></body>
        </html>
        {{tryfiles (print .IndexRoot "/.autoindex.html") }}
  - listen: [':443']
    server_name: ['ip.example.org']
    keyfile: example_org.pem
    index:
      headers: |
        content-type: application/json
      body: |
        {"ip":"{{host .Request.RemoteAddr}}","country":"{{country .Request.RemoteAddr}}"}
  - listen: [':443']
    server_name: ['demo.example.org']
    keyfile: /path/to/demo.example.org.key
    certfile: /path/to/fullchain.cer
    prefer_chacha20: true
    forward:
      policy: |
        {{if regexMatch `^(153.3.130.101|153.3.130.102):` .Request.RemoteAddr}}
          bypass_auth
        {{else if contains " YaBrowser/" .Request.UserAgent}}
          bypass_auth
        {{else if contains "ip.phus.lu" .Request.Host}}
          allow_ip
        {{else if .Request.Header.Get "proxy-authorization"}}
          verify_auth
        {{else if all (.Request.ProtoAtLeast 2 0) (eq .Request.TLS.Version 0x0304) (greased .ClientHelloInfo)}}
          require_proxy_auth
        {{else if contains " Chrome/68.0.3440" .Request.UserAgent}}
          require_proxy_auth
        {{else}}
          proxy_pass
        {{end}}
      auth: |
        python auth.py {{.Request.Header.Get "proxy-authorization"}} {{.Request.RemoteAddr}}
      upstream: |
        {{if hasSuffix ".onion" .Request.Host}}torsocks{{end}}
      deny_domains:
        - facebook.com
        - nytimes.com
      speed_limit: 10000000
    pac:
      enabled: true
    doh:
      enabled: true
      path: /dns-query
      upstream: 'https://1.1.1.1/dns-query'
      prelude:
        example.com: ['93.184.216.34']
        example.org: ['93.184.216.34']
    pprof:
      enabled: true
    proxy:
      pass: 'http://127.0.0.1:80'
  - listen: [':443']
    server_name: ['fly.example.org']
    prefer_chacha20: true
    forward:
      policy: |
        {{if regexMatch `^(git|curl|node|yarn|Go-http-client|Docker-Client|Homebrew)/` .Request.UserAgent}}
            bypass_auth
        {{else}}
            proxy_pass
        {{end}}
      allow_domains:
        - github.com
http:
  - listen: [':123']
    server_name: ['127.0.0.1', '192.168.50.7']
    forward:
      policy: |
        {{if regexMatch `^192\.168\.` .Request.RemoteAddr}}
          bypass_auth
        {{else if regexMatch `\.google|ggpht\.com|gstatic\.com|github` .Request.Host}}
          bypass_auth
        {{else if contains " YaBrowser/" .Request.UserAgent}}
          bypass_auth
        {{else if contains "ip.phus.lu" .Request.Host}}
          allow_ip
        {{else if .Request.Header.Get "proxy-authorization"}}
          verify_auth
        {{else if hasPrefix "Mozilla/" .Request.UserAgent}}
          require_proxy_auth
        {{else}}
          bypass_auth
        {{end}}
      auth: |
        python auth.py {{.Request.Header.Get "proxy-authorization"}} {{.Request.RemoteAddr}}
      upstream: |
        {{if hasPrefix "scholar.google.com" .Request.Host}}
          proxy1_example_org
        {{else if ne (country .Request.Host) "CN"}}
          proxy2_example_com
        {{end}}
    pac:
      enabled: true
    index:
      root: 'C:/Users/phuslu/Desktop'
socks:
  - listen: [':1081']
    server_name: ['127.0.0.1']
    forward:
      policy: |
        {{if regexMatch `^(153.3.130.101|153.3.130.102):` .Request.RemoteAddr}}
          bypass_auth
        {{else if has (region .Request.RemoteAddr) (list "Jiangsu" "Zhejiang" "Shanghai")}}
          bypass_auth
        {{else if has (city .Request.RemoteAddr) (list "Nanjing" "Shanghai")}}
          bypass_auth
        {{else if eq .Request.Version 5}}
          require_auth
        {{else}}
          reject
        {{end}}
      auth: |
        python auth.py socks "{{.Request.Username}}" "{{.Request.Password}}" {{.Request.RemoteAddr}}
      deny_domains:
        - facebook.com
        - nytimes.com
  - listen: [':1082']
    server_name: ['127.0.0.1']
    forward:
      policy: |
        {{if eq (city .Request.RemoteAddr) "Nanjing"}}
          bypass_auth
        {{else if not .Request.Host}}
          bypass_auth
        {{else if regexMatch `^(149|91)\.` .Request.Host}}
          bypass_auth
        {{else}}
          reject
        {{end}}
relay:
  - listen: [':443']
    to: github.com:443
    upstream: proxy1_example_org
